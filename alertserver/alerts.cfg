# This file defines alerts to be triggered by the server.

#
# AlertServer should tolerate no errors.


[[rule]]
name = "AlertServer Errors"
message = "The Error rate for the alertserver is too high, please check the logs."
database = "graphite"
query = "SELECT derivative(mean(value)) FROM ERROR WHERE app = 'alertserver' AND host = 'skia-alerts' AND  time > now() - 4m group by time(2m) order by time desc limit 1"
category = "infra"
condition = "x > 0"
actions = ["Email(alerts@skia.org)"]
auto-dismiss = true
nag = "24h"

#
# SkiaPerf and SkiaGold
#

[[rule]]
name = "Perf Alerts"
message = "At least one perf alert has been found. Please visit https://perf.skia.org/alerts/ to triage."
database = "graphite"
query = "select value from /^alerting.new.value$/ WHERE app = 'skiaperf' AND host = 'skia-perf' order by time desc limit 1"
category = "Perf"
condition = "x > 0"
actions = ["Email(alerts@skia.org)"]
auto-dismiss = true
nag = "24h"

[[rule]]
name = "Gold Alert (GM)"
message = "At least one untriaged GM has been found. Please visit https://gold.skia.org/ to triage."
database = "graphite"
query = "select value from /^status.untriaged.by_corpus.gm.value$/ WHERE app = 'skiacorrectness' AND host = 'skia-gold-prod' order by time desc limit 1"
category = "Gold"
condition = "x > 0"
actions = ["Email(alerts@skia.org)"]
auto-dismiss = true
nag = "24h"

[[rule]]
name = "Expired Ignores (Gold)"
message = "At least one expired ignore rule has been found. Please visit https://gold.skia.org/ignores to delete or extend."
database = "graphite"
query = "select value from /^num-expired-ignore-rules.value$/ WHERE app = 'skiacorrectness' AND host = 'skia-gold-prod' order by time desc limit 1"
category = "Gold"
condition = "x > 0"
actions = ["Email(alerts@skia.org)"]
auto-dismiss = true
nag = "24h"

[[rule]]
name = "Ingestion Failure (Gold)"
message = "At least two rounds of gold ingestion have failed back to back."
database = "graphite"
query = "select mean(value) from /^ingester.gold-ingest.gauge.time-since-last-successful-update.value$/ where app='ingest' AND host='skia-gold-prod' AND  time > now() - 10m"
category = "infra"
condition = "x >= 750"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Ignore Monitoring Failure (Gold)"
message = "At least two rounds of monitoring for expired ignore rules have failed back to back."
database = "graphite"
query = "select mean(value) from /^expired-ignore-rules-monitoring.time-since-last-successful-update.value$/ where app='skiacorrectness' AND host='skia-gold-prod' AND  time > now() - 10m"
category = "infra"
condition = "x >= 200"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Gold Hash Prober"
message = "The list of currently considered image digests is not accessible at https://gold.skia.org/_/hashes"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiagold_hashes' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = false
nag = "1h"

[[rule]]
name = "Gold Error Rate"
message = "The error rate for Gold is too high."
database = "graphite"
query = "select derivative(value, 10m) from /^ERROR$/ WHERE host='skia-gold-prod' AND app='skiacorrectness' order by time desc limit 1"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = false
nag = "1h"

[[rule]]
name = "Gold Ingestion Error Rate"
message = "The error rate for Gold Ingestion is too high."
database = "graphite"
query = "select derivative(value, 10m) from /^ERROR$/ WHERE host='skia-gold-prod' AND app='ingest' order by time desc limit 1"
category = "infra"
condition = "x >= 3"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = false
nag = "1h"



#
# SkFiddle
#

[[rule]]
name = "Skia Fiddle Prober (main page)"
message = "The main page at http://fiddle.skia.org has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skfiddle' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(humper@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Fiddle Prober (bad compile)"
message = "A test compile at http://fiddle.skia.org has failed for more than 10 minutes."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skfiddle_compile_bad' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(humper@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Fiddle Prober (good compile)"
message = "A test compile at http://fiddle.skia.org has failed for more than 10 minutes."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skfiddle_compile_good' AND  time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(humper@google.com)"]
auto-dismiss = true
nag = "1h"

#
# Skia Frontend
#

[[rule]]
name = "Skia Frontend (skfe-1)"
message = "One of the skia.org frontend servers has failed for more than 5 minutes"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skfe-1' AND time > now() - 5m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Frontend (skfe-2)"
message = "One of the skia.org frontend servers has failed for more than 5 minutes"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skfe-2' AND time > now() - 5m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Frontend (GCE Load Balancing)"
message = "Serving for skia.org has failed for more than 5 minutes"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiadev' AND time > now() - 5m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"


#
# Disk space monitoring.
#

[[rule]]
name = "Low Disk Space (skia-docs)"
message = "Free space has fallen below 1GB on skia-docs (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-docs' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-monitoring)"
message = "Free space has fallen below 1GB on skia-monitoring (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-monitoring' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-monitoring /mnt/pd0)"
message = "Free space has fallen below 100GB on skia-monitoring (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-monitoring' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e11"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-perf)"
message = "Free space has fallen below 1GB on skia-perf (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-perf' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-perf/mnt/pd0)"
message = "Free space has fallen below 1GB on skia-perf (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-perf' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-push)"
message = "Free space has fallen below 1GB on skia-push (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-push' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-skfe-1)"
message = "Free space has fallen below 1GB on skia-skfe-1 (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-skfe-1' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-skfe-2)"
message = "Free space has fallen below 1GB on skia-skfe-2 (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-skfe-2' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-gold-prod/root)"
message = "Free space has fallen below 1GB on skia-gold-prod (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-gold-prod' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-gold-prod/mnt/pd0)"
message = "Free space has fallen below 100GB on skia-gold-prod (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-gold-prod' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e11"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-gold-stage/root)"
message = "Free space has fallen below 1GB on skia-gold-stage (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-gold-stage' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-gold-stage/mnt/pd0)"
message = "Free space has fallen below 100GB on skia-gold-stage (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-gold-stage' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e11"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-gold-android/root)"
message = "Free space has fallen below 1GB on skia-gold-android (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-gold-android' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-gold-android/mnt/pd0)"
message = "Free space has fallen below 100GB on skia-gold-android (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-gold-android' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e11"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-alerts)"
message = "Free space has fallen below 1GB on skia-alerts (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-alerts' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-alerts /mnt/pd0)"
message = "Free space has fallen below 1GB on skia-alerts (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-alerts' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-autoroll)"
message = "Free space has fallen below 1GB on skia-autoroll (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-autoroll' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-autoroll /mnt/pd0)"
message = "Free space has fallen below 1GB on skia-autoroll (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-autoroll' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-bugchomper)"
message = "Free space has fallen below 1GB on skia-bugchomper (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-bugchomper' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-datahopper2)"
message = "Free space has fallen below 1GB on skia-datahopper2 (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-datahopper2' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-datahopper2 /mnt/pd0)"
message = "Free space has fallen below 5GB on skia-datahopper2 (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-datahopper2' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 5e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-status)"
message = "Free space has fallen below 1GB on skia-status (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-status' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-status /mnt/pd0)"
message = "Free space has fallen below 5GB on skia-status (/mnt/pd0)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-status' AND resource='df-mnt-pd0' AND time > now() - 5m;"
category = "infra"
condition = "x <= 5e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Low Disk Space (skia-ctfe)"
message = "Free space has fallen below 1GB on skia-ctfe (root)."
database = "graphite"
query = "select mean(value) from /^df_complex-free$/ where host='skia-ctfe' AND resource='df-root' AND time > now() - 5m;"
category = "infra"
condition = "x <= 1e9"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

#
# Skia Status
#

[[rule]]
name = "Skia Status Prober (main page)"
message = "The main page at https://status.skia.org has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiastatus' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Status Prober (JSON endpoint)"
message = "The JSON endpoint at https://status.skia.org/json/skia/commits/ has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiastatus_json' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Status Latency (JSON endpoint)"
message = "The JSON endpoint at https://status.skia.org/json/skia/commits/ took more than 300ms to respond."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='latency' AND probename='skiastatus_json' AND time > now() - 10m;"
category = "infra"
condition = "x / 1000000 > 300"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

#
# Skia Alerts
#

[[rule]]
name = "Skia Alerts Prober (main page)"
message = "The main page at https://alerts.skia.org has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiaalerts' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Alerts Prober (JSON endpoint)"
message = "The JSON endpoint at https://alerts.skia.org/json/alerts/ has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiaalerts_json' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia Alerts Latency (JSON endpoint)"
message = "The JSON endpoint at https://alerts.skia.org/json/alerts/ took more than 200ms to respond."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='latency' AND probename='skiaalerts_json' AND time > now() - 10m;"
category = "infra"
condition = "x / 1000000 > 200"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

#
# Skia AutoRoll Bot
#

[[rule]]
name = "Skia AutoRoll Prober (main page)"
message = "The main page at https://autoroll.skia.org has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiaautoroll' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)", "Email(borenet@google.com)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia AutoRoll Prober (JSON endpoint)"
message = "The JSON endpoint at https://autoroll.skia.org/json/status has failed."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skiaautoroll_json' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Skia AutoRoll Latency (JSON endpoint)"
message = "The JSON endpoint at https://autoroll.skia.org/json/status took more than 200ms to respond."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='latency' AND probename='skiaautoroll_json' AND time > now() - 10m;"
category = "infra"
condition = "x / 1000000 > 200"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "AutoRoll Error Rate"
message = "The error rate for autoroll is too high. http://104.154.112.12:10115/file_server/autoroll.ERROR"
database = "graphite"
query = "select derivative(value, 10m) from /^ERROR$/ where app='autoroll' AND host='skia-autoroll' order by time desc limit 1"
category = "infra"
condition = "x >= 5"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = false
nag = "1h"

#
# Skia Prober
#

[[rule]]
name = "Probe Failure (probes)"
message = "Probing has failed to run in at least 5 minutes."
database = "graphite"
query = "select mean(value) from /^probes.time-since-last-successful-update.value$/ where app='probeserver' AND host='skia-monitoring' AND time > now() - 10m"
category = "infra"
condition = "x >= 300"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Probe Failure (issue-tracker)"
message = "Ingesting issue tracker issued has failed to run in at least 30 minutes."
database = "graphite"
query = "select mean(value) from /^issue-tracker.time-since-last-successful-update.value$/ where app='probeserver' AND host='skia-monitoring' AND time > now() - 10m"
category = "infra"
condition = "x >= 1800"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

#
# Datahopper
#

[[rule]]
name = "Datahopper Buildbot Ingestion Stalled (client.skia)"
message = "Buildbot Ingestion in Datahopper has failed to run in at least 5 minutes for client.skia."
database = "skmetrics"
query = "select mean(value) from liveness where app='datahopper' AND host='skia-datahopper2' AND \"name\"='buildbot-ingest' AND master='client.skia' AND time > now() - 5m"
category = "infra"
condition = "x >= 150"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Datahopper Buildbot Ingestion Stalled (client.skia.android)"
message = "Buildbot Ingestion in Datahopper has failed to run in at least 5 minutes for client.skia.android."
database = "skmetrics"
query = "select mean(value) from liveness where app='datahopper' AND host='skia-datahopper2' AND \"name\"='buildbot-ingest' AND master='client.skia.android' AND time > now() - 5m"
category = "infra"
condition = "x >= 150"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Datahopper Buildbot Ingestion Stalled (client.skia.compile)"
message = "Buildbot Ingestion in Datahopper has failed to run in at least 5 minutes for client.skia.compile."
database = "skmetrics"
query = "select mean(value) from liveness where app='datahopper' AND host='skia-datahopper2' AND \"name\"='buildbot-ingest' AND master='client.skia.compile' AND time > now() - 5m"
category = "infra"
condition = "x >= 150"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Datahopper Buildbot Ingestion Stalled (client.skia.fyi)"
message = "Buildbot Ingestion in Datahopper has failed to run in at least 5 minutes for client.skia.fyi."
database = "skmetrics"
query = "select mean(value) from liveness where app='datahopper' AND host='skia-datahopper2' AND \"name\"='buildbot-ingest' AND master='client.skia.fyi' AND time > now() - 5m"
category = "infra"
condition = "x >= 150"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Datahopper Buildbot Ingestion Too Slow"
message = "Buildbot ingestion time is more than 2 minutes."
database = "skmetrics"
query = "select mean(value) from timer where \"name\"='func-timer' and package='go.skia.org/infra/go/buildbot' and func='ingestNewBuilds' and app='datahopper' AND host='skia-datahopper2' AND time > now() - 5m"
category = "infra"
condition = "x >= 120 * 1000 * 1000 * 1000"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Datahopper Buildbot Start to Ingestion Latency Too High"
message = "Average time between build start and first ingestion is more than 1 minute."
database = "skmetrics"
query = "select mean(value) from \"buildbot.ingest.latency\" where app='datahopper' AND host='skia-datahopper2' AND master!='client.skia.fake_internal' AND time > now() - 24h"
category = "infra"
condition = "x >= 60 * 1000 * 1000 * 1000"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "3h"

[[rule]]
name = "Datahopper Error Rate"
message = "The error rate for datahopper is too high. http://104.154.112.116:10115/file_server/datahopper.ERROR"
database = "graphite"
query = "select derivative(value, 10m) from /^ERROR$/ where app='datahopper' AND host='skia-datahopper2' order by time desc limit 1"
category = "infra"
condition = "x >= 5"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = false
nag = "1h"

#
# Buildbots
#

[[rule]]
name = "Buildslave %(buildslave)s Disconnected"
message = "Buildslave %(buildslave)s is not connected to %(master)s"
database = "skmetrics"
query = "select mean(value) from \"buildbot.buildslaves.connected\" where host='skia-datahopper2' AND app='datahopper' AND time > now() - 10m group by buildslave,master"
category = "infra"
condition = "x < 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "update_scripts failed on %(buildslave)s"
message = "The update_scripts step failed on %(buildslave)s. Please verify that the slave can sync correctly.  http://build.chromium.org/p/%(master)s/buildslaves/%(buildslave)s"
database = "skmetrics"
query = "select value from \"buildbot.buildsteps.failure-status\" where host='skia-datahopper2' AND app='datahopper' AND step='update_scripts' group by buildslave,master order by time desc limit 1"
category = "infra"
condition = "x == 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

#
# CTFE
#

[[rule]]
name = "skia-ctfe logserverd"
message = "skia-ctfe logserverd is not responding at http://skia-ctfe:10115"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skia_ctfe_logs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "skia-ctfe pulld"
message = "skia-ctfe pulld is not responding at http://skia-ctfe:10114"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='skia_ctfe_pulld' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (main page)"
message = "The main page at http://ct.skia.org is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (chromium_perf)"
message = "The page at https://ct.skia.org/chromium_perf/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_chromium_perf' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (capture_skps)"
message = "The page at https://ct.skia.org/capture_skps/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_capture_skps' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (lua_script)"
message = "The page at https://ct.skia.org/lua_script/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_lua_script' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (chromium_builds)"
message = "The page at https://ct.skia.org/chromium_builds/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_chromium_builds' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (admin_tasks)"
message = "The page at https://ct.skia.org/admin_tasks/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_admin_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (queue)"
message = "The page at https://ct.skia.org/queue/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_queue' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (history)"
message = "The page at https://ct.skia.org/history/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_history' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (chromium_perf_runs)"
message = "The page at https://ct.skia.org/chromium_perf_runs/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_chromium_perf' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (capture_skp_runs)"
message = "The page at https://ct.skia.org/capture_skp_runs/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_capture_skp_runs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (lua_script_runs)"
message = "The page at https://ct.skia.org/lua_script_runs/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_lua_script_runs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (chromium_builds_runs)"
message = "The page at https://ct.skia.org/chromium_builds_runs/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_chromium_builds_runs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (recreate_page_sets_runs)"
message = "The page at https://ct.skia.org/recreate_page_sets_runs/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_recreate_page_sets_runs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (recreate_webpage_archives_runs)"
message = "The page at https://ct.skia.org/recreate_webpage_archives_runs/ is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_recreate_webpage_archives_runs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (chromium_perf_parameters)"
message = "The JSON endpoint at https://ct.skia.org/_/chromium_perf/ (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_chromium_perf_parameters' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (cl_data)"
message = "The JSON endpoint at https://ct.skia.org/_/cl_data?cl=1330473002 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_cl_data' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (chromium_rev_data)"
message = "The JSON endpoint at https://ct.skia.org/_/chromium_rev_data?rev=LKGR (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_chromium_rev_data' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (skia_rev_data)"
message = "The JSON endpoint at https://ct.skia.org/_/skia_rev_data?rev=LKGR (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_skia_rev_data' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_chromium_perf_tasks)"
message = "The JSON endpoint at https://ct.skia.org/_/get_chromium_perf_tasks?size=2 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_chromium_perf_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_capture_skp_tasks)"
message = "The JSON endpoint at https://ct.skia.org/_/get_capture_skp_tasks?size=2 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_capture_skp_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_lua_script_tasks)"
message = "The JSON endpoint at https://ct.skia.org/_/get_lua_script_tasks?size=2 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_lua_script_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_chromium_build_tasks)"
message = "The JSON endpoint at https://ct.skia.org/_/get_chromium_build_tasks?size=2 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_chromium_build_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_recreate_page_sets_tasks)"
message = "The JSON endpoint at https://ct.skia.org/_/get_recreate_page_sets_tasks?size=2 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_recreate_page_sets_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_recreate_webpage_archives_tasks)"
message = "The JSON endpoint at https://ct.skia.org/_/get_recreate_webpage_archives_tasks?size=2 (POST) is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_recreate_webpage_archives_tasks' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (get_oldest_pending_task)"
message = "The JSON endpoint at https://ct.skia.org/_/get_oldest_pending_task is unavailable or returning unexpected data."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_get_oldest_pending_task' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Prober (any_skp_repository_available)"
message = "There are no SKP repositories available for running Lua scripts. https://ct.skia.org/capture_skp_runs/"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_any_skp_repository_available' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "24h"

[[rule]]
name = "CTFE Prober (any_chromium_builds_available)"
message = "There are no Chromium builds available for running tasks. https://ct.skia.org/chromium_builds_runs/"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='ctfe_any_chromium_builds_available' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "24h"

[[rule]]
name = "CTFE Pending Task Count"
message = "There are a lot of pending tasks. https://ct.skia.org/queue/"
database = "graphite"
query = "select mean(value) from /^num-pending-tasks.value$/ where app='ctfe' AND host='skia-ctfe' AND time > now() - 10m;"
category = "infra"
condition = "x >= 100"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Pending Task Status"
message = "A task has been waiting to be executed for a while and it's still not started. https://ct.skia.org/queue/"
database = "graphite"
query = "select mean(value) from /^oldest-pending-task-status.value$/ where app='ctfe' AND host='skia-ctfe' AND time > now() - 10m;"
category = "infra"
condition = "x >= 2"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Last Metrics Update"
message = "No recent update from the CTFE metrics goroutine."
database = "graphite"
query = "select count(value) from /^oldest-pending-task-status.value$/ where app='ctfe' AND host='skia-ctfe' AND time > now() - 10m;"
category = "infra"
condition = "x < 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Number of Goroutines"
message = "There are more goroutines running than expected for CTFE."
database = "graphite"
query = "select mean(value) from /^NumGoroutine.value$/ where app='ctfe' AND host='skia-ctfe' AND time > now() - 10m;"
category = "infra"
condition = "x >= 100"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CTFE Error Rate"
message = "The error rate for CTFE is too high. http://104.154.112.110:10115/ctfe.ERROR"
database = "graphite"
query = "select derivative(value, 10m) from /^ERROR$/ where app='ctfe' AND host='skia-ctfe' order by time desc limit 1"
category = "infra"
condition = "x >= 5"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = false
nag = "1h"

[[rule]]
name = "CT Poller Health Check"
message = "CT poller health check is failing. https://uberchromegw.corp.google.com/i/skia-ct-master/poller.ERROR?page_y=end"
database = "graphite"
query = "select mean(value) from /^healthy.value$/ where app='ct-poller' AND host='build101-m5' AND time > now() - 10m;"
category = "infra"
condition = "x < 0.01"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CT Poller Last Metrics Update"
message = "No recent update from the CT Poller metrics goroutine."
database = "graphite"
query = "select count(value) from /^healthy.value$/ where app='ct-poller' AND host='build101-m5' AND time > now() - 10m;"
category = "infra"
condition = "x < 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "CT Poller Number of Goroutines"
message = "There are more goroutines running than expected for CT poller."
database = "graphite"
query = "select mean(value) from /^NumGoroutine.value$/ where app='ct-poller' AND host='build101-m5' AND time > now() - 10m;"
category = "infra"
condition = "x >= 100"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

#
# datahopper_internal (internal.skia.org)
#

[[rule]]
name = "Datahopper internal GCE"
message = "The page at http://skia-internal:8000 is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='internal_main' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "skia-internal logserverd"
message = "skia-internal logserverd is not responding at http://skia-internal:10115"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='internal_logs' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "skia-internal pulld"
message = "skia-internal pulld is not responding at http://skia-internal:10114"
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='internal_pulld' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "Datahopper internal main page"
message = "The page at https://internal.skia.org is unavailable."
database = "graphite"
query = "select mean(value) from /^prober$/ where type='failure' AND probename='internal_public' AND time > now() - 10m;"
category = "infra"
condition = "x >= 1"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"


[[rule]]
name = "datahopper_internal liveness"
message = "Too long between successful gold Android ingestions."
database = "graphite"
query = "select mean(value) from /^android_internal_ingest.time-since-last-successful-update.value$/ where app='internal' AND host='skia-internal' AND time > now() - 10m"
category = "infra"
condition = "x >= 600"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "datahopper_internal Go routines"
message = "Too many Go routines."
database = "graphite"
query = "select mean(value) from /^NumGoroutine.value$/ where  app='internal' AND  host='skia-internal' AND time > now() - 10m"
category = "infra"
condition = "x >= 100"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "datahopper_internal ingestBuild metrics"
message = "datahopper_internal goroutine for updateWebhookMetrics is dead or failing."
database = "graphite"
query = "select mean(value) from /^ingest-build-webhook-oldest-untested-commit-age-metric.time-since-last-successful-update.value$/ where app='internal' AND host='skia-internal' AND time > now() - 10m"
category = "infra"
condition = "x >= 600"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "datahopper_internal Google3-Autoroller up-to-date"
message = "Commit has not been picked up by Google3-Autoroller for over two hours."
database = "graphite"
query = "select mean(value) from /^ingest-build-webhook.oldest-untested-commit-age.value$/ where app='internal' AND host='skia-internal' AND codename='Google3-Autoroller' AND time > now() - 10m"
category = "infra"
condition = "x >= 7200"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

#
# Fuzzer
#

[[rule]]
name = "fuzzer upload binary fuzz"
message = "Binary upload queue has been very full."
database = "graphite"
query = "select mean(value) from /^binary_upload_queue_size.value$/ where  app='fuzzer-be' AND host='skia-fuzzer' AND time > now() - 10m"
category = "infra"
condition = "x >= 90"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"

[[rule]]
name = "fuzzer analysis binary fuzz"
message = "Binary analysis queue has been very full."
database = "graphite"
query = "select mean(value) from /^binary_analysis_queue_size.value$/ where  app='fuzzer-be' AND  host='skia-fuzzer' AND time > now() - 10m"
category = "infra"
condition = "x >= 9000"
actions = ["Email(infra-alerts@skia.org)"]
auto-dismiss = true
nag = "1h"
