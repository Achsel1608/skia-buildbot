// Code generated by protoc-gen-go.
// source: sharedb.proto
// DO NOT EDIT!

/*
Package sharedb is a generated protocol buffer package.

It is generated from these files:
	sharedb.proto

It has these top-level messages:
	GetRequest
	GetResponse
	PutRequest
	PutResponse
	DeleteRequest
	DeleteResponse
	DatabasesRequest
	DatabasesResponse
	BucketsRequest
	BucketsResponse
	KeysRequest
	KeysResponse
*/
package sharedb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	Database string `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Bucket   string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetResponse struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PutRequest struct {
	Database string `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Bucket   string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value    []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PutResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeleteRequest struct {
	Database string `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Bucket   string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeleteResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DatabasesRequest struct {
}

func (m *DatabasesRequest) Reset()                    { *m = DatabasesRequest{} }
func (m *DatabasesRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabasesRequest) ProtoMessage()               {}
func (*DatabasesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DatabasesResponse struct {
	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *DatabasesResponse) Reset()                    { *m = DatabasesResponse{} }
func (m *DatabasesResponse) String() string            { return proto.CompactTextString(m) }
func (*DatabasesResponse) ProtoMessage()               {}
func (*DatabasesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type BucketsRequest struct {
	Database string `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
}

func (m *BucketsRequest) Reset()                    { *m = BucketsRequest{} }
func (m *BucketsRequest) String() string            { return proto.CompactTextString(m) }
func (*BucketsRequest) ProtoMessage()               {}
func (*BucketsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type BucketsResponse struct {
	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *BucketsResponse) Reset()                    { *m = BucketsResponse{} }
func (m *BucketsResponse) String() string            { return proto.CompactTextString(m) }
func (*BucketsResponse) ProtoMessage()               {}
func (*BucketsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type KeysRequest struct {
	Database  string `protobuf:"bytes,1,opt,name=database" json:"database,omitempty"`
	Bucket    string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Prefix    string `protobuf:"bytes,3,opt,name=prefix" json:"prefix,omitempty"`
	MinPrefix string `protobuf:"bytes,4,opt,name=minPrefix" json:"minPrefix,omitempty"`
	MaxPrefix string `protobuf:"bytes,5,opt,name=maxPrefix" json:"maxPrefix,omitempty"`
}

func (m *KeysRequest) Reset()                    { *m = KeysRequest{} }
func (m *KeysRequest) String() string            { return proto.CompactTextString(m) }
func (*KeysRequest) ProtoMessage()               {}
func (*KeysRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type KeysResponse struct {
	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *KeysResponse) Reset()                    { *m = KeysResponse{} }
func (m *KeysResponse) String() string            { return proto.CompactTextString(m) }
func (*KeysResponse) ProtoMessage()               {}
func (*KeysResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func init() {
	proto.RegisterType((*GetRequest)(nil), "sharedb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "sharedb.GetResponse")
	proto.RegisterType((*PutRequest)(nil), "sharedb.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "sharedb.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "sharedb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "sharedb.DeleteResponse")
	proto.RegisterType((*DatabasesRequest)(nil), "sharedb.DatabasesRequest")
	proto.RegisterType((*DatabasesResponse)(nil), "sharedb.DatabasesResponse")
	proto.RegisterType((*BucketsRequest)(nil), "sharedb.BucketsRequest")
	proto.RegisterType((*BucketsResponse)(nil), "sharedb.BucketsResponse")
	proto.RegisterType((*KeysRequest)(nil), "sharedb.KeysRequest")
	proto.RegisterType((*KeysResponse)(nil), "sharedb.KeysResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ShareDB service

type ShareDBClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	Databases(ctx context.Context, in *DatabasesRequest, opts ...grpc.CallOption) (*DatabasesResponse, error)
	Buckets(ctx context.Context, in *BucketsRequest, opts ...grpc.CallOption) (*BucketsResponse, error)
	Keys(ctx context.Context, in *KeysRequest, opts ...grpc.CallOption) (*KeysResponse, error)
}

type shareDBClient struct {
	cc *grpc.ClientConn
}

func NewShareDBClient(cc *grpc.ClientConn) ShareDBClient {
	return &shareDBClient{cc}
}

func (c *shareDBClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/sharedb.ShareDB/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shareDBClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := grpc.Invoke(ctx, "/sharedb.ShareDB/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shareDBClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/sharedb.ShareDB/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shareDBClient) Databases(ctx context.Context, in *DatabasesRequest, opts ...grpc.CallOption) (*DatabasesResponse, error) {
	out := new(DatabasesResponse)
	err := grpc.Invoke(ctx, "/sharedb.ShareDB/Databases", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shareDBClient) Buckets(ctx context.Context, in *BucketsRequest, opts ...grpc.CallOption) (*BucketsResponse, error) {
	out := new(BucketsResponse)
	err := grpc.Invoke(ctx, "/sharedb.ShareDB/Buckets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shareDBClient) Keys(ctx context.Context, in *KeysRequest, opts ...grpc.CallOption) (*KeysResponse, error) {
	out := new(KeysResponse)
	err := grpc.Invoke(ctx, "/sharedb.ShareDB/Keys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShareDB service

type ShareDBServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Put(context.Context, *PutRequest) (*PutResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	Databases(context.Context, *DatabasesRequest) (*DatabasesResponse, error)
	Buckets(context.Context, *BucketsRequest) (*BucketsResponse, error)
	Keys(context.Context, *KeysRequest) (*KeysResponse, error)
}

func RegisterShareDBServer(s *grpc.Server, srv ShareDBServer) {
	s.RegisterService(&_ShareDB_serviceDesc, srv)
}

func _ShareDB_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDBServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharedb.ShareDB/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDBServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShareDB_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDBServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharedb.ShareDB/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDBServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShareDB_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDBServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharedb.ShareDB/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDBServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShareDB_Databases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDBServer).Databases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharedb.ShareDB/Databases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDBServer).Databases(ctx, req.(*DatabasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShareDB_Buckets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BucketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDBServer).Buckets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharedb.ShareDB/Buckets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDBServer).Buckets(ctx, req.(*BucketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShareDB_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDBServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharedb.ShareDB/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDBServer).Keys(ctx, req.(*KeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShareDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sharedb.ShareDB",
	HandlerType: (*ShareDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ShareDB_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _ShareDB_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ShareDB_Delete_Handler,
		},
		{
			MethodName: "Databases",
			Handler:    _ShareDB_Databases_Handler,
		},
		{
			MethodName: "Buckets",
			Handler:    _ShareDB_Buckets_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _ShareDB_Keys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sharedb.proto",
}

func init() { proto.RegisterFile("sharedb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0xcd, 0x4e, 0x32, 0x31,
	0x14, 0xfd, 0x60, 0xf8, 0xbd, 0xfc, 0x7c, 0x58, 0x11, 0xc7, 0x46, 0x13, 0x52, 0x13, 0xa3, 0xd1,
	0xb0, 0xc0, 0xb8, 0x32, 0x71, 0x41, 0x26, 0x71, 0xe1, 0x86, 0x8c, 0xf1, 0x01, 0x66, 0xa4, 0x06,
	0x02, 0x32, 0x48, 0x67, 0x0c, 0x3c, 0x88, 0x4f, 0xe9, 0x4b, 0xd8, 0x69, 0x3b, 0xed, 0x00, 0xfe,
	0x25, 0xb2, 0x9b, 0x7b, 0x4e, 0xcf, 0x3d, 0xb7, 0xb7, 0x07, 0xa0, 0xc6, 0x86, 0xde, 0x9c, 0x0e,
	0xfc, 0xce, 0x6c, 0x1e, 0x84, 0x01, 0x2a, 0xaa, 0x92, 0xb8, 0x00, 0xb7, 0x34, 0x74, 0xe9, 0x4b,
	0x44, 0x59, 0x88, 0x30, 0x94, 0x06, 0x5e, 0xe8, 0xf9, 0x1e, 0xa3, 0x76, 0xa6, 0x9d, 0x39, 0x2d,
	0xbb, 0xba, 0x46, 0x2d, 0x28, 0xf8, 0xd1, 0xe3, 0x98, 0x86, 0x76, 0x56, 0x30, 0xaa, 0x42, 0x0d,
	0xb0, 0xc6, 0x74, 0x69, 0x5b, 0x02, 0x8c, 0x3f, 0xc9, 0x31, 0x54, 0x44, 0x4f, 0x36, 0x0b, 0xa6,
	0x5c, 0xd8, 0x84, 0xfc, 0xab, 0x37, 0x89, 0x64, 0xc7, 0xaa, 0x2b, 0x0b, 0x32, 0x04, 0xe8, 0x47,
	0xdb, 0x35, 0x36, 0x4e, 0xb9, 0xb4, 0xd3, 0x11, 0x54, 0x84, 0x93, 0x1a, 0xa7, 0x0e, 0xd9, 0x60,
	0x2c, 0x4c, 0x4a, 0x2e, 0xff, 0x22, 0x0f, 0x50, 0x73, 0xe8, 0x84, 0x86, 0x74, 0xbb, 0x4b, 0x68,
	0x43, 0x3d, 0x69, 0xfb, 0x85, 0x31, 0x82, 0x86, 0xa3, 0xfa, 0x32, 0xe5, 0x4d, 0xce, 0x61, 0x27,
	0x85, 0x29, 0x21, 0x37, 0x15, 0x37, 0x61, 0x5c, 0x6c, 0xc5, 0xa6, 0xb2, 0x22, 0x17, 0x50, 0xef,
	0x09, 0x7b, 0xf6, 0x8b, 0xd1, 0xc9, 0x19, 0xfc, 0xd7, 0xa7, 0x7f, 0x68, 0xfc, 0x96, 0x81, 0xca,
	0x1d, 0x5d, 0xb2, 0xbf, 0x6c, 0x84, 0xe3, 0xb3, 0x39, 0x7d, 0x1a, 0x2d, 0xd4, 0x52, 0x54, 0x85,
	0x0e, 0xa1, 0xfc, 0x3c, 0x9a, 0xf6, 0x25, 0x95, 0x13, 0x94, 0x01, 0x04, 0xeb, 0x2d, 0x14, 0x9b,
	0x57, 0x6c, 0x02, 0x90, 0x13, 0xa8, 0xca, 0xb1, 0xbe, 0x9f, 0xbf, 0xfb, 0x9e, 0x85, 0xe2, 0x7d,
	0x1c, 0x70, 0xa7, 0x87, 0xba, 0x60, 0xf1, 0x30, 0xa2, 0xdd, 0x4e, 0xf2, 0x03, 0x30, 0x71, 0xc7,
	0xcd, 0x55, 0x50, 0x76, 0x25, 0xff, 0x62, 0x0d, 0x4f, 0x4c, 0x4a, 0x63, 0x92, 0x9a, 0xd2, 0xa4,
	0x42, 0xc5, 0x35, 0xd7, 0x50, 0x90, 0xef, 0x8d, 0x5a, 0xfa, 0xc4, 0x4a, 0xae, 0xf0, 0xfe, 0x06,
	0xae, 0xc5, 0x0e, 0x94, 0xf5, 0xb3, 0xa3, 0x03, 0x73, 0x6e, 0x2d, 0x1e, 0x18, 0x7f, 0x46, 0xe9,
	0x2e, 0x37, 0x50, 0x54, 0x2f, 0x8c, 0x8c, 0xd7, 0x6a, 0x42, 0xb0, 0xbd, 0x49, 0x68, 0xfd, 0x15,
	0xe4, 0xe2, 0xf5, 0x22, 0x73, 0xc5, 0x54, 0x08, 0xf0, 0xde, 0x1a, 0x9a, 0xc8, 0xfc, 0x82, 0xf8,
	0x4b, 0xb9, 0xfc, 0x08, 0x00, 0x00, 0xff, 0xff, 0x62, 0x1c, 0x22, 0x50, 0x63, 0x04, 0x00, 0x00,
}
