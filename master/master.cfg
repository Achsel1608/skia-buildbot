# Copyright (c) 2011 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import socket

# This module comes from
# third_party/chromium_buildbot/third_party/buildbot_<VERSION> ,
# which must be in the PYTHONPATH.
from buildbot.status import mail

# These modules come from third_party/chromium_buildbot/scripts ,
# which must be in the PYTHONPATH.
from master import master_utils
from master import slaves_list

import master_builders_cfg
import master_source_cfg
import site_config

ActiveMaster = site_config.Master.Skia

# Boolean indicating whether we are running in test or production
IS_PRODUCTION_MODE = ActiveMaster.is_production_host

c = BuildmasterConfig = {}
c['change_source'] = []
c['schedulers'] = []
c['builders'] = []
c['status'] = []

master_source_cfg.Update(site_config, ActiveMaster, c)
master_builders_cfg.Update(site_config, ActiveMaster, c)


# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'Skia')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])


# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           site_config.Master.GetBotPassword())
master_utils.VerifySetup(c, slaves)


# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster, mail_notifier=False)

# Add our own mail notifiers (only in production mode):
# 1. email the committer whether it succeeded or failed
# 2. email skia-commit list only if it changed test results
if IS_PRODUCTION_MODE:
  c['status'].append(mail.MailNotifier(
      fromaddr=ActiveMaster.from_address,
      sendToInterestedUsers=True,
      extraRecipients=['skia-commit@googlegroups.com'],
      mode='change',
      relayhost=site_config.Master.smtp,
      lookup=master_utils.FilterDomain(
          permitted_domains=site_config.Master.permitted_domains)))
